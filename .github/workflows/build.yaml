name: Build and Publish to Docker Hub

on:
  push:
    branches: [main, develop]
    tags: ["v*"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  app-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.3"
          cache: true

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: make vet

      - name: Test
        run: |
          make test
  
      - name: Lint
        run: |
          make lint
  
      - uses: sonarsource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # build-and-push:
  #   needs: app-testing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: "1.24.3"
  #         cache: true

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Extract metadata
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}
  #           type=semver,pattern={{major}}
  #           type=sha,prefix={{branch}}-
  #           type=raw,value=latest,enable={{is_default_branch}}

  #     - name: Build and push Docker image
  #       id: build-and-push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         build-args: |
  #           VERSION=${{ steps.meta.outputs.version }}
  #           COMMIT=${{ github.sha }}
  #           BUILD_DATE=${{ steps.meta.outputs.created }}

  #     #   - name: Install cosign
  #     #     uses: sigstore/cosign-installer@v3

  #     # - name: Sign container image with cosign
  #     #   run: |
  #     #     echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign --yes {}@${{ steps.build-and-push.outputs.digest }}

  #     # - name: Generate SBOM
  #     #   uses: anchore/sbom-action@v0
  #     #   with:
  #     #     image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
  #     #     format: spdx-json
  #     #     output-file: sbom.spdx.json

  #     - name: Scan image with Trivy
  #       uses: aquasecurity/trivy-action@master
  #       with:
  #         image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}
  #         format: sarif
  #         output: trivy-results.sarif
